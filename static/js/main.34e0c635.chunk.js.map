{"version":3,"sources":["store/actions.js","components/form.js","components/summary.js","functions/utilities.js","App.js","reportWebVitals.js","store/rootReducer.js","index.js"],"names":["SUBMIT_FORM_DATA","DELETE_FORM_DATA","useStyles","makeStyles","theme","submit","margin","spacing","Form","useState","isFormActive","setIsFormActive","classes","dispatch","useDispatch","validationSchema","yup","shape","firstName","required","surname","email","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","control","onSubmit","data","type","actionTypes","payload","Grid","container","item","xs","sm","as","TextField","label","name","variant","fullWidth","autoComplete","inputRef","error","helperText","message","defaultValue","id","multiline","rows","rowsMax","Button","size","color","className","onClick","paper","position","padding","marginBottom","backgroundColor","display","top","right","pre","textAlign","whiteSpace","customHoverFocus","Summary","formEntries","useSelector","state","length","map","entry","Paper","dangerouslySetInnerHTML","__html","json","JSON","stringify","value","undefined","replace","match","cls","test","IconButton","aria-label","entryId","Typography","component","box","borderRadius","border","borderColor","palette","action","disabledBackground","App","useEffect","console","clear","log","Container","maxWidth","Box","mt","mb","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","concat","uuidv4","filter","store","createStore","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"0TAAaA,EAAmB,mBACnBC,EAAmB,mBCW1BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,EAAG,EAAG,QAmHjBC,EA/GF,WAAO,IAAD,QACuBC,oBAAS,GADhC,mBACVC,EADU,KACIC,EADJ,KAEXC,EAAUV,IACVW,EAAWC,cAEXC,EAAmBC,MAAaC,MAAM,CAC1CC,UAAWF,MAAaG,SAAS,gCACjCC,QAASJ,MAAaG,SAAS,6BAC/BE,MAAOL,MAEJK,MAAM,sCACNF,SAAS,6BAXG,EAcmCG,kBAAQ,CAC1DC,KAAM,SACNC,SAAUC,sBAAYV,KAFhBW,EAdS,EAcTA,SAAUC,EAdD,EAcCA,aAAcC,EAdf,EAceA,OAAQC,EAdvB,EAcuBA,QAUxC,OACE,mCACInB,EAUA,uBAAMoB,SAAUH,GAjBL,SAACI,GAChBlB,EAAS,CAAEmB,KAAMC,EAA8BC,QAASH,IACxDpB,GAAgB,MAeZ,UACE,eAACwB,EAAA,EAAD,CAAMC,WAAS,EAAC7B,QAAS,EAAzB,UACE,cAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,aAAD,CACEC,GAAIC,IACJC,MAAM,aACNC,KAAK,YACLd,QAASA,EACTe,QAAQ,WACRC,WAAS,EACTC,aAAa,QACbC,SAAUrB,EACVsB,QAASpB,EAAOV,UAChB+B,WAAU,UAAErB,EAAOV,iBAAT,aAAE,EAAkBgC,QAC9BC,aAAa,OAGjB,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,aAAD,CACEC,GAAIC,IACJC,MAAM,UACNC,KAAK,UACLd,QAASA,EACTe,QAAQ,WACRC,WAAS,EACTC,aAAa,QACbE,QAASpB,EAAOR,QAChB6B,WAAU,UAAErB,EAAOR,eAAT,aAAE,EAAgB8B,QAC5BC,aAAa,OAGjB,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACG,EAAA,EAAD,CACEC,MAAM,gBACNU,GAAG,QACHT,KAAK,QACLC,QAAQ,WACRG,SAAUrB,EACVmB,WAAS,EACTC,aAAa,QACbE,QAASpB,EAAOP,MAChB4B,WAAU,UAAErB,EAAOP,aAAT,aAAE,EAAc6B,YAG9B,cAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACG,EAAA,EAAD,CACEC,MAAM,iBACNU,GAAG,gBACHT,KAAK,gBACLC,QAAQ,WACRG,SAAUrB,EACVmB,WAAS,EACTQ,WAAW,EACXC,KAAM,EACNC,QAAS,EACTT,aAAa,aAInB,cAACU,EAAA,EAAD,CACExB,KAAK,SACLyB,KAAK,QACLZ,WAAS,EACTD,QAAQ,YACRc,MAAM,UACNC,UAAW/C,EAAQP,OANrB,uBApEF,cAACmD,EAAA,EAAD,CACEZ,QAAQ,WACRc,MAAM,UACND,KAAK,QACLG,QAAS,kBAAMjD,GAAgB,IAJjC,yB,oCClCFT,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,MAAO,CACLC,SAAU,WACVC,QAAS3D,EAAMG,QAAQ,GACvB,qBAAsB,CACpByD,aAAc5D,EAAMG,QAAQ,IAE9B,UAAW,CACT0D,gBAAiB,YAGnB,0BAA2B,CACzBH,SAAU,WACVI,QAAS,QAGX,gCAAiC,CAC/BA,QAAS,OACTC,IAAK,EACLC,MAAO,IAIXC,IAAK,CACHC,UAAW,OACXC,WAAY,WACZ,YAAa,CAAEb,MAAO,SACtB,YAAa,CAAEA,MAAO,cACtB,aAAc,CAAEA,MAAO,QACvB,UAAW,CAAEA,MAAO,WACpB,SAAU,CAAEA,MAAO,QAGrBc,iBAAkB,CAChBP,gBAAiB,MACjB,8BAA+B,CAAEA,gBAAiB,aA4CvCQ,EAxCC,WACd,IAAM7D,EAAUV,IACVwE,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eAC3C7D,EAAWC,cAMjB,OACE,mCACG4D,EAAYG,OAAS,EACpBH,EAAYI,KAAI,SAACC,GAAD,OACd,eAACC,EAAA,EAAD,CAAsBrB,UAAW/C,EAAQiD,MAAzC,UACE,qBACEF,UAAW/C,EAAQyD,IACnBY,wBAAyB,CACvBC,QCnEgBC,EDoEdC,KAAKC,UAAUN,EAAMO,WAAOC,EAAW,ICnEvDJ,EAAOA,EACJK,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,SACLA,QAEV,0GACA,SAAUC,GACR,IAAIC,EAAM,SAYV,MAXI,KAAKC,KAAKF,GAEVC,EADE,KAAKC,KAAKF,GACN,MAEA,SAEC,aAAaE,KAAKF,GAC3BC,EAAM,UACG,OAAOC,KAAKF,KACrBC,EAAM,QAED,gBAAkBA,EAAM,KAAOD,EAAQ,iBDmDxC,cAACG,EAAA,EAAD,CACEjC,UAAU,uBACVkC,aAAW,SACXjC,QAAS,kBApBCR,EAoBkB2B,EAAM3B,QAnB5CvC,EAAS,CAAEmB,KAAMC,EAA8B6D,QAAS1C,IADrC,IAACA,GAiBZ,SAKE,cAAC,IAAD,QAdQ2B,EAAM3B,IC/DG,IAAC+B,KDkFxB,cAACY,EAAA,EAAD,CAAYC,UAAU,IAAIpD,QAAQ,QAAlC,oDEvEF1C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyD,MAAO,CACLE,QAAS3D,EAAMG,QAAQ,IAGzB0F,IAAK,CACHC,aAAc,EACdC,OAAQ,YACRC,YAAahG,EAAMiG,QAAQC,OAAOC,mBAClCxC,QAAS3D,EAAMG,QAAQ,QA+CZiG,EA3CH,WACV,IAAM5F,EAAUV,IAShB,OAPAuG,qBAAU,WACRC,QAAQC,QACRD,QAAQE,IACN,gJAED,IAGD,cAACC,EAAA,EAAD,CAAWb,UAAU,OAAOc,SAAS,KAArC,SACE,eAAC3E,EAAA,EAAD,CAAMC,WAAS,EAAC7B,QAAS,EAAzB,UACE,eAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAACwE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,UACE,cAAClB,EAAA,EAAD,CAAYC,UAAU,KAAKpD,QAAQ,KAAnC,iCAGA,cAACmD,EAAA,EAAD,CAAYC,UAAU,OAAOpD,QAAQ,QAArC,6DAIF,cAAC,EAAD,OAEF,eAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAACwE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,UACE,cAAClB,EAAA,EAAD,CAAYC,UAAU,KAAKpD,QAAQ,KAAnC,6BAGA,cAACmD,EAAA,EAAD,CAAYC,UAAU,OAAOpD,QAAQ,QAArC,2GAKF,cAACmE,EAAA,EAAD,CAAKpD,UAAW/C,EAAQqF,IAAxB,SACE,cAAC,EAAD,eC/CGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCJRQ,EAAe,CACnBjD,YAAa,IAuBAkD,EApBC,WAAmC,IAAlChD,EAAiC,uDAAzB+C,EAAcrB,EAAW,uCAChD,OAAQA,EAAOtE,MACb,KAAKC,EACH,MAAO,CACLyC,YAAaE,EAAMF,YAAYmD,OAAO,CACpCzE,GAAI0E,cACJxC,MAAOgB,EAAOpE,WAGpB,KAAKD,EACH,MAAO,CACLyC,YAAaE,EAAMF,YAAYqD,QAC7B,SAAChD,GAAD,OAAWA,EAAM3B,KAAOkD,EAAOR,YAGrC,QACE,OAAOlB,ICbPoD,EAAQC,YAAYL,GAE1BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUJ,MAAOA,EAAjB,UACE,cAACK,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.34e0c635.chunk.js","sourcesContent":["export const SUBMIT_FORM_DATA = \"SUBMIT_FORM_DATA\";\r\nexport const DELETE_FORM_DATA = \"DELETE_FORM_DATA\";\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as actionTypes from \"../store/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const [isFormActive, setIsFormActive] = useState(false);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = yup.object().shape({\r\n    firstName: yup.string().required(\"Please enter your first name\"),\r\n    surname: yup.string().required(\"Please enter your surname\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Please enter a valid email address\")\r\n      .required(\"Please an email address\"),\r\n  });\r\n\r\n  const { register, handleSubmit, errors, control } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch({ type: actionTypes.SUBMIT_FORM_DATA, payload: data });\r\n    setIsFormActive(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isFormActive ? (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => setIsFormActive(true)}\r\n        >\r\n          Add Form\r\n        </Button>\r\n      ) : (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Controller\r\n                as={TextField}\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                control={control}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                autoComplete=\"fname\"\r\n                inputRef={register}\r\n                error={!!errors.firstName}\r\n                helperText={errors.firstName?.message}\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Controller\r\n                as={TextField}\r\n                label=\"Surname\"\r\n                name=\"surname\"\r\n                control={control}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                autoComplete=\"lname\"\r\n                error={!!errors.surname}\r\n                helperText={errors.surname?.message}\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Email Address\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                inputRef={register}\r\n                fullWidth\r\n                autoComplete=\"email\"\r\n                error={!!errors.email}\r\n                helperText={errors.email?.message}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Customer Query\"\r\n                id=\"customerQuery\"\r\n                name=\"customerQuery\"\r\n                variant=\"outlined\"\r\n                inputRef={register}\r\n                fullWidth\r\n                multiline={true}\r\n                rows={4}\r\n                rowsMax={8}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { syntaxHighlight } from \"../functions/utilities\";\r\nimport * as actionTypes from \"../store/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"relative\",\r\n    padding: theme.spacing(1),\r\n    \"&:not(:last-child)\": {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"cornsilk\",\r\n    },\r\n\r\n    \"& .hidden-delete-button\": {\r\n      position: \"absolute\",\r\n      display: \"none\",\r\n    },\r\n\r\n    \"&:hover .hidden-delete-button\": {\r\n      display: \"flex\",\r\n      top: 0,\r\n      right: 0,\r\n    },\r\n  },\r\n\r\n  pre: {\r\n    textAlign: \"left\",\r\n    whiteSpace: \"pre-wrap\",\r\n    \"& .string\": { color: \"green\" },\r\n    \"& .number\": { color: \"darkorange\" },\r\n    \"& .boolean\": { color: \"blue\" },\r\n    \"& .null\": { color: \"magenta\" },\r\n    \"& .key\": { color: \"red\" },\r\n  },\r\n\r\n  customHoverFocus: {\r\n    backgroundColor: \"red\",\r\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"pink\" },\r\n  },\r\n}));\r\n\r\nconst Summary = () => {\r\n  const classes = useStyles();\r\n  const formEntries = useSelector((state) => state.formEntries);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch({ type: actionTypes.DELETE_FORM_DATA, entryId: id });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {formEntries.length > 0 ? (\r\n        formEntries.map((entry) => (\r\n          <Paper key={entry.id} className={classes.paper}>\r\n            <pre\r\n              className={classes.pre}\r\n              dangerouslySetInnerHTML={{\r\n                __html: syntaxHighlight(\r\n                  JSON.stringify(entry.value, undefined, 4)\r\n                ),\r\n              }}\r\n            />\r\n            <IconButton\r\n              className=\"hidden-delete-button\"\r\n              aria-label=\"Delete\"\r\n              onClick={() => handleDelete(entry.id)}\r\n            >\r\n              <DeleteOutline />\r\n            </IconButton>\r\n          </Paper>\r\n        ))\r\n      ) : (\r\n        <Typography component=\"p\" variant=\"body2\">\r\n          There isn't any submitted form data\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","export const syntaxHighlight = (json) => {\r\n  json = json\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\");\r\n  return json.replace(\r\n    // eslint-disable-next-line\r\n    /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\r\n    function (match) {\r\n      var cls = \"number\";\r\n      if (/^\"/.test(match)) {\r\n        if (/:$/.test(match)) {\r\n          cls = \"key\";\r\n        } else {\r\n          cls = \"string\";\r\n        }\r\n      } else if (/true|false/.test(match)) {\r\n        cls = \"boolean\";\r\n      } else if (/null/.test(match)) {\r\n        cls = \"null\";\r\n      }\r\n      return '<span class=\"' + cls + '\">' + match + \"</span>\";\r\n    }\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Form from \"./components/form\";\nimport Summary from \"./components/summary\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n\n  box: {\n    borderRadius: 4,\n    border: \"1px solid\",\n    borderColor: theme.palette.action.disabledBackground,\n    padding: theme.spacing(1),\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.clear();\n    console.log(\n      \"\\nDeveloped by Ali Tursucular\\n\\nLinkedIn: https://www.linkedin.com/in/alitursucular/\\nPersonal Portfolio: https://alitursucular.github.io\"\n    );\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"lg\">\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Box mt={4} mb={3}>\n            <Typography component=\"h2\" variant=\"h6\">\n              Customer Query Form\n            </Typography>\n            <Typography component=\"span\" variant=\"body2\">\n              Click on the \"Add Button\" to add a new form.\n            </Typography>\n          </Box>\n          <Form />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Box mt={4} mb={3}>\n            <Typography component=\"h2\" variant=\"h6\">\n              Submitted Data:\n            </Typography>\n            <Typography component=\"span\" variant=\"body2\">\n              This box is the \"Summary Component\" that maps out submitted form\n              details from Redux store.\n            </Typography>\n          </Box>\n          <Box className={classes.box}>\n            <Summary />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../store/actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = {\r\n  formEntries: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SUBMIT_FORM_DATA:\r\n      return {\r\n        formEntries: state.formEntries.concat({\r\n          id: uuidv4(),\r\n          value: action.payload,\r\n        }),\r\n      };\r\n    case actionTypes.DELETE_FORM_DATA:\r\n      return {\r\n        formEntries: state.formEntries.filter(\r\n          (entry) => entry.id !== action.entryId\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer from \"./store/rootReducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}